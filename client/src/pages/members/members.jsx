import React, { useState, useEffect } from 'react';
import {
  Box, Button, TextField, Typography, Paper, Table, TableBody, TableCell,
  TableContainer, TableHead, TableRow, Dialog, DialogTitle, DialogContent,
  DialogActions, MenuItem, Grid, FormControl, InputLabel, Select
} from '@mui/material';
import Navbar from '../../components/Navbar';

const MembersPage = () => {
  const [members, setMembers] = useState([]);
  const [open, setOpen] = useState(false);
  const [editing, setEditing] = useState(false);
  const [loading, setLoading] = useState(true);
  const [previewUrl, setPreviewUrl] = useState('');
  
  // Handle picture upload
  const handlePictureChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onloadend = () => {
        setPreviewUrl(reader.result);
      };
      reader.readAsDataURL(file);
      handleChange(e);
    }
  };
  
  // Program data
  const programData = {
    JACINTH: {
      name: 'JACINTH',
      ageBrackets: [
        { range: '18 - 25', amount: 55, availment: '3 mons & 1 day' },
        { range: '26 - 30', amount: 75, availment: '4 mons & 1 day' },
        { range: '31 - 35', amount: 97, availment: '5 mons & 1 day' },
        { range: '36 - 40', amount: 115, availment: '6 mons & 1 day' },
        { range: '41 - 45', amount: 120, availment: '7 mons & 1 day' },
        { range: '46 - 50', amount: 135, availment: '8 mons & 1 day' },
        { range: '51 - 55', amount: 145, availment: '9 mons & 1 day' },
        { range: '56 - 60', amount: 160, availment: '10 mons & 1 day' },
        { range: '61 - 65', amount: 185, availment: '12 mons & 1 day' },
        { range: '66 - 70', amount: 195, availment: '14 mons & 1 day' },
        { range: '71 - 75', amount: 210, availment: '16 mons & 1 day' },
        { range: '76 - 80', amount: 235, availment: '18 mons & 1 day' },
        { range: '81 - 85', amount: 260, availment: '24 mons & 1 day' },
        { range: '86 - 90', amount: 285, availment: '24 mons & 1 day' },
        { range: '91 - 95', amount: 350, availment: '24 mons & 1 day' },
        { range: '96 - 101 UP', amount: 395, availment: '24 mons & 1 day' }
      ]
    },
    CHALCEDONY: {
      name: 'CHALCEDONY',
      ageBrackets: [
        { range: '18 - 25', amount: 80, availment: '3 mons & 1 day' },
        { range: '26 - 30', amount: 105, availment: '4 mons & 1 day' },
        { range: '31 - 35', amount: 130, availment: '5 mons & 1 day' },
        { range: '36 - 40', amount: 145, availment: '6 mons & 1 day' },
        { range: '41 - 45', amount: 150, availment: '7 mons & 1 day' },
        { range: '46 - 50', amount: 165, availment: '8 mons & 1 day' },
        { range: '51 - 55', amount: 180, availment: '9 mons & 1 day' },
        { range: '56 - 60', amount: 195, availment: '10 mons & 1 day' },
        { range: '61 - 65', amount: 225, availment: '12 mons & 1 day' },
        { range: '66 - 70', amount: 240, availment: '14 mons & 1 day' },
        { range: '71 - 75', amount: 265, availment: '16 mons & 1 day' },
        { range: '76 - 80', amount: 290, availment: '18 mons & 1 day' },
        { range: '81 - 85', amount: 325, availment: '24 mons & 1 day' },
        { range: '86 - 90', amount: 360, availment: '24 mons & 1 day' },
        { range: '91 - 95', amount: 415, availment: '24 mons & 1 day' },
        { range: '96 - 101 UP', amount: 450, availment: '24 mons & 1 day' }
      ]
    }
  };

  const programOptions = ['JACINTH', 'CHALCEDONY'];
  const endorsedByOptions = ['Staff 1', 'Staff 2', 'Staff 3', 'Other'];
  
  // Get age brackets for the selected program
  const getAgeBrackets = () => {
    if (!currentMember.program || !programData[currentMember.program]) return [];
    return programData[currentMember.program].ageBrackets;
  };
  
  // Handle program change
  const handleProgramChange = (e) => {
    const selectedProgram = e.target.value;
    setCurrentMember({
      ...currentMember,
      program: selectedProgram,
      ageBracket: '',
      contributionAmount: '',
      availmentPeriod: ''
    });
  };

  const [currentMember, setCurrentMember] = useState({
    // Member Information
    applicationNumber: '', // Will be auto-generated by backend
    fullName: '',
    nickname: '',
    age: '',
    program: '',
    ageBracket: '',
    contributionAmount: '',
    availmentPeriod: '',
    picture: null,
    dateApplied: '',
    completeAddress: '',
    provincialAddress: '',
    dateOfBirth: '',
    placeOfBirth: '',
    sex: '',
    civilStatus: '',
    spouseName: '',
    spouseDob: '',
    churchAffiliation: '',
    educationAttainment: '',
    presentEmployment: '',
    employerName: '',
    contactNumber: '',
    program: '',
    
    // Beneficiary Information
    beneficiaryName: '',
    beneficiaryDob: '',
    beneficiaryAge: '',
    beneficiaryRelationship: '',
    
    // Staff Information (to be filled by staff)
    datePaid: '',
    receivedBy: '',
    orNumber: '',
    endorsedBy: ''
  });

  // Fetch members from API
  useEffect(() => {
    const fetchMembers = async () => {
      try {
        setLoading(true);
        // TODO: Replace with actual API call
        // const response = await api.get('/members');
        // setMembers(response.data);
        
        // Simulate API call
        setTimeout(() => {
          setMembers([]);
          setLoading(false);
        }, 500);
      } catch (error) {
        console.error('Error fetching members:', error);
        setLoading(false);
      }
    };

    fetchMembers();
  }, []);

  const handleOpen = () => setOpen(true);
  const handleClose = () => {
    setOpen(false);
    setEditing(false);
    setPreviewUrl('');
    setCurrentMember({
      applicationNumber: '',
      fullName: '',
      nickname: '',
      age: '',
      program: '',
      ageBracket: '',
      contributionAmount: '',
      availmentPeriod: '',
      picture: null,
      dateApplied: '',
      completeAddress: '',
      provincialAddress: '',
      dateOfBirth: '',
      placeOfBirth: '',
      sex: '',
      civilStatus: '',
      spouseName: '',
      spouseDob: '',
      churchAffiliation: '',
      educationAttainment: '',
      presentEmployment: '',
      employerName: '',
      contactNumber: '',
      beneficiaryName: '',
      beneficiaryDob: '',
      beneficiaryAge: '',
      beneficiaryRelationship: '',
      datePaid: '',
      receivedBy: '',
      orNumber: '',
      endorsedBy: ''
    });
  };

  const handleChange = (e) => {
    const { name, value } = e.target;
    setCurrentMember(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // TODO: Implement API call to save/update member
    console.log('Submitting:', currentMember);
    
    // For demo purposes, add to local state
    if (editing) {
      setMembers(members.map(m => 
        m.applicationNumber === currentMember.applicationNumber ? currentMember : m
      ));
    } else {
      // In a real app, the backend would generate the application number
      const newMember = {
        ...currentMember,
        applicationNumber: `APP-${Date.now()}` // Temporary - should come from backend
      };
      setMembers([...members, newMember]);
    }
    
    handleClose();
  };

  const handleEdit = (member) => {
    setCurrentMember(member);
    setEditing(true);
    setOpen(true);
  };

  const handleDelete = (applicationNumber) => {
    // TODO: Add confirmation dialog
    setMembers(members.filter(m => m.applicationNumber !== applicationNumber));
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50">
        <Navbar activePage="members" />
        <div className="flex justify-center items-center h-64">
          <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-500"></div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <Navbar activePage="members" />
      <div className="py-10">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="mb-8">
            <h1 className="text-2xl font-bold text-gray-900">Members Management</h1>
            <p className="mt-1 text-sm text-gray-500">Add and manage members</p>
          </div>
          
          <div className="grid grid-cols-1 gap-8">
            <div className="bg-white shadow rounded-lg overflow-hidden">
              <div className="px-6 py-5 border-b border-gray-200">
                <div className="flex justify-between items-center">
                  <h2 className="text-lg font-medium text-gray-900">Members List</h2>
                  <button
                    onClick={handleOpen}
                    className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  >
                    + Add Member
                  </button>
                </div>
              </div>
              <div className="p-6">
                <div className="overflow-x-auto">
                  <table className="min-w-full divide-y divide-gray-200">
                    <thead className="bg-gray-50">
                      <tr>
                        <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                          Name
                        </th>
                        <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                          Contact
                        </th>
                        <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                          Date Applied
                        </th>
                        <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                          Program
                        </th>
                        <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                          Endorsed By
                        </th>
                        <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                          Branch
                        </th>

                        <th scope="col" className="relative px-6 py-3">
                          <span className="sr-only">Actions</span>
                        </th>
                      </tr>
                    </thead>
                    <tbody className="bg-white divide-y divide-gray-200">
                      {members.map((member) => (
                        <tr key={member.applicationNumber} className="hover:bg-gray-50">
                          <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                            {member.fullName}
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                            {member.contactNumber || 'N/A'}
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                            {member.dateApplied || 'N/A'}
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                            {member.program || 'N/A'}
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                            <button
                              onClick={(e) => {
                                e.stopPropagation();
                                handleEdit(member);
                              }}
                              className="text-green-600 hover:text-green-900 mr-4"
                            >
                              Edit
                            </button>
                            <button
                              onClick={(e) => {
                                e.stopPropagation();
                                handleDelete(member.applicationNumber);
                              }}
                              className="text-red-600 hover:text-red-900"
                            >
                              Delete
                            </button>
                          </td>
                        </tr>
                      ))}
                      {members.length === 0 && (
                        <tr>
                          <td colSpan="5" className="px-6 py-4 text-center text-sm text-gray-500">
                            No members found
                          </td>
                        </tr>
                      )}
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Add/Edit Member Dialog */}
      <Dialog 
        open={open} 
        onClose={handleClose} 
        maxWidth="md" 
        fullWidth
        className="relative z-50"
        aria-labelledby="member-dialog-title"
      >
        <div className="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
        <div className="fixed inset-0 z-10 w-screen overflow-y-auto">
          <div className="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
            <div className="relative transform overflow-hidden rounded-lg bg-white px-4 pb-4 pt-5 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-4xl sm:p-6">
              <div>
                <div className="mt-3 text-center sm:mt-0 sm:text-left">
                  <h3 className="text-base font-semibold leading-6 text-gray-900" id="member-dialog-title">
                    {editing ? 'Edit Member' : 'Add New Member'}
                  </h3>
                  <div className="mt-2">
                    <form onSubmit={handleSubmit}>
                      <div className="space-y-6">
                        <div className="border-b border-gray-200 pb-4 mb-4">
                          <div className="flex items-center space-x-6">
                            <div className="shrink-0">
                              {previewUrl ? (
                                <img
                                  className="h-24 w-24 object-cover rounded-full border-2 border-gray-300"
                                  src={previewUrl}
                                  alt="Member preview"
                                />
                              ) : (
                                <div className="h-24 w-24 rounded-full bg-gray-200 flex items-center justify-center text-gray-500">
                                  <span className="text-sm">No photo</span>
                                </div>
                              )}
                            </div>
                            <div className="flex-1">
                              <label className="block">
                                <span className="sr-only">Choose profile photo</span>
                                <input
                                  type="file"
                                  name="picture"
                                  onChange={handlePictureChange}
                                  accept="image/*"
                                  className="block w-full text-sm text-gray-500
                                    file:mr-4 file:py-2 file:px-4
                                    file:rounded-md file:border-0
                                    file:text-sm file:font-semibold
                                    file:bg-green-50 file:text-green-700
                                    hover:file:bg-green-100"
                                />
                              </label>
                              <p className="mt-1 text-xs text-gray-500">JPG, GIF or PNG. Max size 2MB</p>
                            </div>
                          </div>
                        </div>
                        
                        <div>
                          <h4 className="text-sm font-medium text-gray-900 mb-4">Personal Information</h4>
                          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Full Name *
                              </label>
                              <input
                                type="text"
                                name="fullName"
                                value={currentMember.fullName}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                                required
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Nickname
                              </label>
                              <input
                                type="text"
                                name="nickname"
                                value={currentMember.nickname}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Age *
                              </label>
                              <input
                                type="number"
                                name="age"
                                value={currentMember.age}
                                onChange={handleChange}
                                min="0"
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                                required
                              />
                            </div>
                            
                            {/* Program Selection */}
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Program *
                              </label>
                              <select
                                name="program"
                                value={currentMember.program}
                                onChange={handleProgramChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                                required
                              >
                                <option value="">Select Program...</option>
                                {programOptions.map((option, index) => (
                                  <option key={index} value={option}>{option}</option>
                                ))}
                              </select>
                            </div>
                            
                            {/* Age Bracket Dropdown - Only shown when a program is selected */}
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Age Bracket *
                              </label>
                              <select
                                name="ageBracket"
                                value={currentMember.ageBracket}
                                onChange={(e) => {
                                  const selectedBracket = e.target.value;
                                  const selectedData = getAgeBrackets().find(bracket => bracket.range === selectedBracket);
                                  setCurrentMember({
                                    ...currentMember,
                                    ageBracket: selectedBracket,
                                    contributionAmount: selectedData ? selectedData.amount : '',
                                    availmentPeriod: selectedData ? selectedData.availment : ''
                                  });
                                }}
                                disabled={!currentMember.program}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2 disabled:bg-gray-100 disabled:text-gray-500"
                                required
                              >
                                <option value="">Select Age Bracket...</option>
                                {getAgeBrackets().map((bracket, index) => (
                                  <option key={index} value={bracket.range}>
                                    {bracket.range} years
                                  </option>
                                ))}
                              </select>
                            </div>
                            
                            {/* Contribution Amount - Readonly */}
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Contribution Amount (Php)
                              </label>
                              <input
                                type="text"
                                name="contributionAmount"
                                value={currentMember.contributionAmount ? `${currentMember.contributionAmount} PHP` : ''}
                                readOnly
                                className="block w-full rounded-md border-gray-300 bg-gray-50 shadow-sm sm:text-sm px-2 py-2"
                              />
                            </div>
                            
                            {/* Availment Period - Readonly */}
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Availment Period
                              </label>
                              <input
                                type="text"
                                name="availmentPeriod"
                                value={currentMember.availmentPeriod || ''}
                                readOnly
                                className="block w-full rounded-md border-gray-300 bg-gray-50 shadow-sm sm:text-sm px-2 py-2"
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Date Applied *
                              </label>
                              <input
                                type="date"
                                name="dateApplied"
                                value={currentMember.dateApplied}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                                required
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Complete Address
                              </label>
                              <textarea
                                name="completeAddress"
                                value={currentMember.completeAddress}
                                onChange={handleChange}
                                rows={2}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                                required
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Provincial Address
                              </label>
                              <textarea
                                name="provincialAddress"
                                value={currentMember.provincialAddress}
                                onChange={handleChange}
                                rows={2}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Date of Birth
                              </label>
                              <input
                                type="date"
                                name="dateOfBirth"
                                value={currentMember.dateOfBirth}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                                required
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Place of Birth
                              </label>
                              <input
                                type="text"
                                name="placeOfBirth"
                                value={currentMember.placeOfBirth}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                                required
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Sex
                              </label>
                              <select
                                name="sex"
                                value={currentMember.sex}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                                required
                              >
                                <option value="">Select...</option>
                                <option value="Male">Male</option>
                                <option value="Female">Female</option>
                              </select>
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Civil Status
                              </label>
                              <select
                                name="civilStatus"
                                value={currentMember.civilStatus}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                                required
                              >
                                <option value="">Select...</option>
                                <option value="Single">Single</option>
                                <option value="Married">Married</option>
                                <option value="Widowed">Widowed</option>
                                <option value="Separated">Separated</option>
                                <option value="Divorced">Divorced</option>
                              </select>
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Name of Spouse (Optional)
                              </label>
                              <input
                                type="text"
                                name="spouseName"
                                value={currentMember.spouseName}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Spouse Date of Birth
                              </label>
                              <input
                                type="date"
                                name="spouseDob"
                                value={currentMember.spouseDob}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Church Affiliation
                              </label>
                              <input
                                type="text"
                                name="churchAffiliation"
                                value={currentMember.churchAffiliation}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Education Attainment
                              </label>
                              <input
                                type="text"
                                name="educationAttainment"
                                value={currentMember.educationAttainment}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Present Employment
                              </label>
                              <input
                                type="text"
                                name="presentEmployment"
                                value={currentMember.presentEmployment}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Name of Employer
                              </label>
                              <input
                                type="text"
                                name="employerName"
                                value={currentMember.employerName}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Contact Number
                              </label>
                              <input
                                type="tel"
                                name="contactNumber"
                                value={currentMember.contactNumber}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                                required
                              />
                            </div>
                          </div>
                        </div>

                        <div>
                          <h4 className="text-sm font-medium text-gray-900 mb-4">Beneficiary Information</h4>
                          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Beneficiary Name
                              </label>
                              <input
                                type="text"
                                name="beneficiaryName"
                                value={currentMember.beneficiaryName}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Beneficiary Date of Birth
                              </label>
                              <input
                                type="date"
                                name="beneficiaryDob"
                                value={currentMember.beneficiaryDob}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Beneficiary Age
                              </label>
                              <input
                                type="number"
                                name="beneficiaryAge"
                                value={currentMember.beneficiaryAge}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Relationship to Member
                              </label>
                              <input
                                type="text"
                                name="beneficiaryRelationship"
                                value={currentMember.beneficiaryRelationship}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                              />
                            </div>
                          </div>
                        </div>

                        <div>
                          <h4 className="text-sm font-medium text-gray-900 mb-4">Staff Information</h4>
                          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Date Paid
                              </label>
                              <input
                                type="date"
                                name="datePaid"
                                value={currentMember.datePaid}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Received By
                              </label>
                              <input
                                type="text"
                                name="receivedBy"
                                value={currentMember.receivedBy}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                O.R. Number
                              </label>
                              <input
                                type="text"
                                name="orNumber"
                                value={currentMember.orNumber}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                              />
                            </div>
                            <div>
                              <label className="block text-sm font-medium text-gray-700 mb-1">
                                Endorsed By (Field Worker)
                              </label>
                              <select
                                name="endorsedBy"
                                value={currentMember.endorsedBy}
                                onChange={handleChange}
                                className="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm px-2 py-2"
                              >
                                <option value="">Select staff</option>
                                {endorsedByOptions.map((option, index) => (
                                  <option key={index} value={option}>{option}</option>
                                ))}
                              </select>
                            </div>
                          </div>
                        </div>
                      <div className="mt-5 sm:mt-6 sm:grid sm:grid-flow-row-dense sm:grid-cols-2 sm:gap-3">
                        <button
                          type="button"
                          className="mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:col-start-1 sm:mt-0"
                          onClick={handleClose}
                        >
                          Cancel
                        </button>
                        <button
                          type="submit"
                          className="inline-flex w-full justify-center rounded-md bg-green-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-green-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-green-600 sm:col-start-2"
                        >
                          {editing ? 'Update' : 'Save'}
                        </button>
                      </div>
                    </div>
                    </form>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </Dialog>
    </div>
)};

export default MembersPage;